ARG BASE_DIMG
FROM ${BASE_DIMG}

ARG ENTRY_POINT="."

SHELL ["/bin/bash", "-c"]

ARG ENTRY_POINT=entry_point.bash
# Re-defining ROSDISTRO, as 'ARG's need to be defined after FROM, except the one meant to be passed to FROM https://stackoverflow.com/a/63086565/577001
ARG ROSDISTRO="galactic"
ARG UBUNTU_DISTRO=focal
ARG PATH_REPOS_FILE
ARG WS_IN_CONTAINER

RUN echo "DEBUG: ${ROSDISTRO}"

# Hint to dpkg and apt that packages should be installed without asking for human intervention
ENV DEBIAN_FRONTEND noninteractive

# Need these before sources can be set up
RUN apt update -qq \
 # Otherwise key issue occurs https://stackoverflow.com/questions/50757647
 && apt install -y gnupg2 wget \
 # Keys for ros.org
 && echo "deb http://packages.ros.org/ros/ubuntu $UBUNTU_DISTRO main" > /etc/apt/sources.list.d/ros-latest.list \
 && apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 \
 # setup keys and sources for official Gazebo debian packages
 && wget https://packages.osrfoundation.org/gazebo.gpg -O /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg \
 && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null \
 && apt-get clean && rm -rf /var/lib/apt/lists/*

# install OS tools. TBD This dependency better to be contained in a pkg.
RUN apt update -qq && apt install -y \
    bash-completion \
    git \
    locales \
    psmisc \
    python3-colcon-common-extensions \
    python3-rosdep \
    python3-vcstool \
    && apt clean \
    && rm -rf /var/lib/apt/lists/*

# Expose port used to communicate with gzserver
EXPOSE 11345

# Stuff for nvidia-docker
LABEL com.nvidia.volumes.needed="nvidia_driver"
ENV PATH /usr/local/nvidia/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}

# Set encoding to use unicode characters
RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8

ENV USERNAME=devsamll
ARG USERID=1000
RUN adduser -u $USERID --gecos "Development User" --disabled-password $USERNAME \
    && echo "export QT_X11_NO_MITSHM=1" >> /home/$USERNAME/.bashrc
USER $USERNAME
WORKDIR /home/$USERNAME

#Download and compile workspace
COPY $PATH_REPOS_FILE $WS_IN_CONTAINER/src/cws.repos
# This fixed dir permission issue but not sure if we want to do this. Sincd docker container runs as root by default this might be just fine?
USER root
RUN mkdir -p $WS_IN_CONTAINER/src && cd $WS_IN_CONTAINER && ls -lth $WS_IN_CONTAINER/src && vcs import --debug --skip-existing $WS_IN_CONTAINER/src < $WS_IN_CONTAINER/src/cws.repos
# Workaround for apt cannot be run https://stackoverflow.com/a/57930100/577001
USER root
RUN echo "DEBUG: ${ROSDISTRO}" \
    && source /opt/ros/${ROSDISTRO}/setup.bash \
    && cd $WS_IN_CONTAINER \
    && sudo apt update -qq && rosdep update && rosdep install -y --from-paths src --ignore-src \
    && echo "Tentative before settles https://answers.ros.org/question/374424"; apt install -y python3-colcon-common-extensions \
    && colcon build
USER $USERNAME

# setup entrypoint
COPY $ENTRY_POINT/entry_point.bash /
ENTRYPOINT ["/entry_point.bash"]
CMD ["bash"]
